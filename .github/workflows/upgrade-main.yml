# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: upgrade-main
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * *
jobs:
  upgrade:
    name: Upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      patch_created: ${{ steps.create_patch.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Upgrade dependencies
        run: npx projen upgrade
      - id: create_patch
        name: Find mutations
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "::set-output name=patch_created::true"
      - if: steps.create_patch.outputs.patch_created
        name: Upload patch
        uses: actions/upload-artifact@v2
        with:
          name: .repo.patch
          path: .repo.patch
    container:
      image: jsii/superchain:1-buster-slim-node14
  pr:
    name: Create Pull Request
    needs: upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: ${{ needs.upgrade.outputs.patch_created }}
    steps:
      - id: setup
        run: |-
          if ! [[ -z "${{ secrets.PROJEN_GITUHB_TOKEN }}" ]]; then
            echo "PROJEN_GITHUB_TOKEN exists."
            echo ::set-output has_token=true
          else
            echo "PROJEN_GITHUB_TOKEN doesn't exist."
            echo ::set-output has_token=false
          fi
          jq -nc '{"state": "pending", "context": "go tests"}' | curl -sL -X POST -d @-    -H "Content-Type: application/json"    -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"    "${{ github.event.pull_request.statuses_url }}"
        if: github.event_name == 'pull_request'
      - name: Checkout
        if: github.event_name == 'push' && steps.setup.outputs.has_token == 'true'
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: main
      - name: Checkout
        if: github.event_name || 'push' && steps.setup.outputs.has_token != 'true'
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Download patch
        uses: actions/download-artifact@v3
        with:
          name: .repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: "'[ -s ${{ runner.temp }}/.repo.patch ] && git apply ${{ runner.temp }}/.repo.patch || echo \"Empty patch. Skipping.\"'"
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          commit-message: |-
            chore(deps): upgrade dependencies

            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-main" workflow*
          branch: github-actions/upgrade-main
          title: '"chore(deps): upgrade dependencies"'
          labels: auto-approve,auto-merge
          body: |-
            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-main" workflow*
          author: github-actions <github-actions@github.com>
          comitter: github-actions <github-actions@github.com>
          signoff: true
